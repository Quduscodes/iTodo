{"version":3,"sources":["Components/Header.js","Components/TodoCounter.js","Components/TodoItem.js","Todos.js","Components/NewTodoModal.js","App.js","index.js"],"names":["Header","props","className","style","isDark","color","type","checked","onChange","toggle","backgroundColor","TodoCounter","count","TodoItem","todo","theme","completed","fontWeight","fontSize","borderBottom","text","Todos","id","NewTodoModal","show","onClick","custTodos","useState","newTodo","setNewTodo","newTodoList","setTodoList","e","stopPropagation","cols","rows","placeholder","name","value","target","updateTodo","length","toUpperCase","push","console","log","App","completedStyle","fontStyle","textDecoration","showModal","setShowModal","setIsDark","setCompleted","newTodos","map","icon","mainButtonStyles","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df51c1fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className='header' style={!props.isDark?{color:'black'}:null}>\r\n            <label className='switch'>\r\n                <input type='checkbox' checked={props.isDark} onChange={props.toggle}/>\r\n                <span className='slider round'>\r\n                </span>\r\n            </label>\r\n            <h1>iTodo</h1>\r\n            <div className='menu'>\r\n                <div className='menu-button' style={!props.isDark?{backgroundColor:'black'}:null}></div>\r\n                <div className='menu-button' style={!props.isDark?{backgroundColor:'black'}:null}></div>\r\n                <div className='menu-button' style={!props.isDark?{backgroundColor:'black'}:null}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction TodoCounter({count}) {\r\n    return (\r\n        <div className='todoCounter'>\r\n            <h3>Today's Todos - {count} Todo(s)</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoCounter;","import React from \"react\";\r\n\r\nfunction TodoItem({ todo, theme, completed, onChange, style }) {\r\n  const lightTheme = {\r\n    backgroundColor: \"#cdcdcd\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 15,\r\n    borderBottom: \"2px solid black\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"todoItem\" style={theme ? null : lightTheme}>\r\n      <input type=\"checkbox\" checked={completed} onChange={onChange} />\r\n      <p style={style}>{todo.text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","const Todos = [\r\n    {   id: 1,\r\n        text: 'Welcome to iTodo',\r\n        completed: false, \r\n    },\r\n    \r\n    {   id: 2,\r\n        text: 'Click Plus (+) Button to add new todo',\r\n        completed: false, \r\n    },\r\n    \r\n    {   id: 3,\r\n        text: 'Improve Codebase',\r\n        completed: false, \r\n    },\r\n\r\n    {   id: 4,\r\n        text: 'Click on the check box to mark an item as completed',\r\n        completed: false, \r\n    },\r\n\r\n    {   id: 5,\r\n        text: 'Enter multiple todos by entering separate Todos in separate lines',\r\n        completed: false, \r\n    }\r\n\r\n]\r\nexport default Todos;","import React, { useState } from \"react\";\r\n\r\nfunction NewTodoModal({ show, onClick, custTodos }) {\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [newTodoList, setTodoList] = useState([]);\r\n\r\n  function addTodo() {\r\n    const updateTodo = [\r\n      {...newTodoList},\r\n      {\r\n        id: newTodoList.length + 1,\r\n        text: newTodo.toUpperCase,\r\n        completed: false,\r\n      },\r\n    ];\r\n    setTodoList(updateTodo);\r\n    custTodos.push({\r\n        id: newTodoList.length + 1,\r\n        text: newTodo,\r\n        completed: false,\r\n      });\r\n    setNewTodo(\"\");\r\n    console.log(newTodoList);\r\n  }\r\n\r\n  if (show === false) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"todoModal\" onClick={onClick}>\r\n      <div\r\n        className=\"modalContent\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"modalHeader\">\r\n          <h4 className=\"modalTitle\">Add New Todo</h4>\r\n        </div>\r\n        <div className=\"modalBody\">\r\n          <textarea\r\n            cols=\"40\"\r\n            rows=\"8\"\r\n            placeholder=\"Enter to-do...\"\r\n            name=\"newTodo\"\r\n            value={newTodo}\r\n            onChange={(e) => {\r\n              setNewTodo(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"modalFooter\">\r\n          <button className=\"button\" onClick={newTodo ? addTodo : null}>\r\n            Add Todo(s)\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTodoModal;\r\n","import React, { useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport TodoCounter from \"./Components/TodoCounter\";\nimport TodoItem from \"./Components/TodoItem\";\nimport Todos from \"./Todos\";\nimport NewTodoModal from \"./Components/NewTodoModal\";\nimport { Fab } from \"react-tiny-fab\";\n\nlet custTodos = [];\n\nfunction App() {\n  const lightTheme = {\n    backgroundColor: \"#cdcdcd\",\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: 15,\n  };\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    textDecoration: \"line-through\",\n  };\n\n  const [showModal, setShowModal] = useState(false);\n  const [isDark, setIsDark] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const todos = custTodos.length > 0 ? custTodos : Todos;\n  const newTodos = todos.map((todo) => (\n    <TodoItem\n      key={todo.id}\n      style={todo.completed ? completedStyle : null}\n      todo={todo}\n      theme={isDark}\n      completed={todo.completed}\n      onChange={() => {\n        setCompleted(!completed);\n        todo.completed = completed;\n      }}\n    />\n  ));\n\n  return (\n    <div className=\"App\" style={isDark ? null : lightTheme}>\n      <Header\n        isDark={isDark}\n        toggle={() => {\n          setIsDark(!isDark);\n        }}\n      />\n      <TodoCounter count={custTodos.length} />\n      <Fab\n        icon={\"+\"}\n        mainButtonStyles={{ backgroundColor: \" rgb(39, 46, 49)\" }}\n        event=\"click\"\n        text=\"Add New Todo\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n      />\n      <NewTodoModal\n        custTodos={custTodos}\n        show={showModal}\n        onClick={() => {\n          setShowModal(false);\n        }}\n      />\n      {newTodos}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}